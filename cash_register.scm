(define tax_rate 0.065)
(define (run)
  (display "Scheme Point-of-Sale\n")
  (display "Start transaction (exit with 0):\n\n")
  (firstloop 0.0)
)
(define (firstloop total)
  (display "Enter Value:")
  (let ((num (cashtofloat (format "~a" (read)))))
    (cond 
      ((equal? num 0) (endprogram total))
      (else (addloop (+ total num)))
    )
  )
)
(define (addloop total)
  (display "$")
  (display total)
  (display "\n\n")
  (display "Enter Value:")
  (let ((num (cashtofloat (format "~a" (read)))))
    (cond 
      ((equal? num 0) (endprogram total))
      (else (addloop (+ total num)))
    )
  )
)
(define (cashtofloat cash)
  (string->number (substring cash 1 (string-length cash)))
)
(define (endprogram total)
  (display "\nSubtotal: $")
  (display total)
  (display "\n")
  (let ((tax (calctax total)))
    (display "Tax: $")
    (display tax)
    (display "\n")
    (display "Total: $")
    (display (+ total tax))
    (display "\n")
  )
)
(define (calctax total)
  (* total tax_rate)
)