(define tax_rate 0.065)
(define (run)
  (print "Scheme Point-of-Sale")
  (print "Start transaction (exit with 0):")
  (print "")
  (firstloop 0.0)
)
(define (firstloop total)
  (display "Enter Value:")
  (let ((num (cashtofloat (format "~a" (read)))))
    (cond 
      ((equal? num 0) (endprogram total))
      (else (addloop (+ total num)))
    )
  )
)
(define (addloop total)
  (print "$" total)
  (print "")
  (display "Enter Value:")
  (let ((num (cashtofloat (format "~a" (read)))))
    (cond 
      ((equal? num 0) (endprogram total))
      (else (addloop (+ total num)))
    )
  )
)
(define (cashtofloat cash)
  (string->number (substring cash 1 (string-length cash)))
)
(define (endprogram total)
  (print "")
  (print "Subtotal: $" total)
  (let ((tax (calctax total)))
    (print "Tax: $" tax)
    (print "Total: $" (+ total tax))
  )
)
(define (calctax total)
  (* total tax_rate)
)